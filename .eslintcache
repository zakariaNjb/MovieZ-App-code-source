[{"C:\\Users\\ZAKARIA NAJIB\\Desktop\\moviesNJB project\\moviesnjb\\src\\index.js":"1","C:\\Users\\ZAKARIA NAJIB\\Desktop\\moviesNJB project\\moviesnjb\\src\\App.js":"2","C:\\Users\\ZAKARIA NAJIB\\Desktop\\moviesNJB project\\moviesnjb\\src\\reportWebVitals.js":"3","C:\\Users\\ZAKARIA NAJIB\\Desktop\\moviesNJB project\\moviesnjb\\src\\HomePage\\Components\\Home.js":"4","C:\\Users\\ZAKARIA NAJIB\\Desktop\\moviesNJB project\\moviesnjb\\src\\HomePage\\Components\\Movies.js":"5","C:\\Users\\ZAKARIA NAJIB\\Desktop\\moviesNJB project\\moviesnjb\\src\\HomePage\\Components\\SingleMovie.js":"6","C:\\Users\\ZAKARIA NAJIB\\Desktop\\moviesNJB project\\moviesnjb\\src\\MoviesTrailer\\Components\\MovieInformations.js":"7","C:\\Users\\ZAKARIA NAJIB\\Desktop\\moviesNJB project\\moviesnjb\\src\\MoviesTrailer\\Components\\Details.js":"8","C:\\Users\\ZAKARIA NAJIB\\Desktop\\moviesNJB project\\moviesnjb\\src\\MoviesTrailer\\Components\\Reviews.js":"9","C:\\Users\\ZAKARIA NAJIB\\Desktop\\moviesNJB project\\moviesnjb\\src\\API\\ApiParam.js":"10","C:\\Users\\ZAKARIA NAJIB\\Desktop\\moviesNJB project\\moviesnjb\\src\\MoviesTrailer\\Components\\Videos.js":"11","C:\\Users\\ZAKARIA NAJIB\\Desktop\\moviesNJB project\\moviesnjb\\src\\MoreMovies\\Components\\RSCMovies.js":"12","C:\\Users\\ZAKARIA NAJIB\\Desktop\\moviesNJB project\\moviesnjb\\src\\MoreMovies\\Components\\RecommendedSimilarActors.js":"13","C:\\Users\\ZAKARIA NAJIB\\Desktop\\moviesNJB project\\moviesnjb\\src\\MoreMovies\\Components\\Actor.js":"14"},{"size":500,"mtime":499162500000,"results":"15","hashOfConfig":"16"},{"size":680,"mtime":1610718855535,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":11568,"mtime":1610667161405,"results":"19","hashOfConfig":"16"},{"size":972,"mtime":1610297345985,"results":"20","hashOfConfig":"16"},{"size":1085,"mtime":1610299837100,"results":"21","hashOfConfig":"16"},{"size":6844,"mtime":1610743632434,"results":"22","hashOfConfig":"16"},{"size":2921,"mtime":1610746687039,"results":"23","hashOfConfig":"16"},{"size":1208,"mtime":1610647805663,"results":"24","hashOfConfig":"16"},{"size":114,"mtime":1610128619983,"results":"25","hashOfConfig":"16"},{"size":1610,"mtime":1610677063670,"results":"26","hashOfConfig":"16"},{"size":4073,"mtime":1610752814780,"results":"27","hashOfConfig":"16"},{"size":2584,"mtime":1610753077487,"results":"28","hashOfConfig":"16"},{"size":735,"mtime":1610754217625,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1ru9dp",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ZAKARIA NAJIB\\Desktop\\moviesNJB project\\moviesnjb\\src\\index.js",[],["63","64"],"C:\\Users\\ZAKARIA NAJIB\\Desktop\\moviesNJB project\\moviesnjb\\src\\App.js",[],"C:\\Users\\ZAKARIA NAJIB\\Desktop\\moviesNJB project\\moviesnjb\\src\\reportWebVitals.js",[],"C:\\Users\\ZAKARIA NAJIB\\Desktop\\moviesNJB project\\moviesnjb\\src\\HomePage\\Components\\Home.js",["65"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"../Css/Home.css\";\r\n//Materia ui + react icon\r\nimport  {RiSearch2Fill} from \"react-icons/ri\";\r\nimport {AiOutlineYoutube} from \"react-icons/ai\";\r\nimport {BsChevronLeft,BsChevronRight} from \"react-icons/bs\";\r\n//Api param\r\nimport {url,apiKey} from \"../../../src/API/ApiParam\";\r\n//Components\r\nimport Movies from \"../Components/Movies\";\r\n\r\n\r\n//var to track the last user genre click\r\nlet clickedItem=null;\r\n//var to track the user selected page\r\nlet clickedPage=null;\r\n\r\nfunction Home(){\r\n\r\n    //Sates\r\n    const [genres,setGenres]=useState(undefined);\r\n    const [movies,setMovies]=useState(undefined);\r\n    const defaultGenre=useRef(undefined);\r\n\r\n    // functions\r\n    const apiCall=async (path)=>{\r\n        let data=undefined;\r\n        await fetch(path).then(response=>{\r\n            //console.log(\"Response\",response);\r\n            if(response.ok) return response.json();\r\n            else throw Error(\"Api call has failed\");\r\n        }).then(arrivedData=>{\r\n            //console.log(\"Data has arrived\",arrivedData);\r\n            data=arrivedData;\r\n        }).catch(err=>console.log(err));\r\n        return data;\r\n    };\r\n\r\n    //API call to get list of genres & top rated movies\r\n    const getGenresTopRated=async ()=>{\r\n        let path=url+\"genre/movie/list?api_key=\"+apiKey;\r\n        let data=await apiCall(path);\r\n        setGenres(data);\r\n        path=url+\"movie/top_rated?api_key=\"+apiKey;\r\n        data=await apiCall(path);\r\n        data.currGenre=\"top_rated\";\r\n        setMovies(data);\r\n        defaultGenre.current.style.color=\"snow\";\r\n        clickedItem=defaultGenre.current;\r\n    };\r\n\r\n    //Controll scrolling to left & right\r\n    const moveRight=()=>{\r\n        const container=document.getElementById(\"options\");\r\n        container.scrollBy(300,0);\r\n    };\r\n    const moveLeft=()=>{\r\n        const container=document.getElementById(\"options\");\r\n        container.scrollBy(-300,0);\r\n    };\r\n\r\n    //Set only 10 pages is used in #pages div\r\n    const onlyTenPages=(nbrPages=0)=>{\r\n        if(nbrPages>9) nbrPages=10;\r\n        let arr=[];\r\n        for(let i=0;i<nbrPages;i++) arr.push(i+1);\r\n        return arr;\r\n    };\r\n\r\n    //Next page used to display next page of movies\r\n    const nextPage=async(event)=>{\r\n        if(clickedPage!==null){\r\n            clickedPage.style.backgroundColor=\"transparent\";\r\n            clickedPage.style.color=\"grey\";\r\n        }\r\n        const li=event.target;\r\n        li.style.color=\"black\";\r\n        li.style.backgroundColor=\"#E1C562\";\r\n        clickedPage=li;\r\n        const nbr=li.getAttribute(\"data-nbrpages\");\r\n        let currGenre=li.getAttribute(\"data-currgenre\");\r\n        currGenre=currGenre.split(\"_\").join(\" \");\r\n        //Scroll to the top\r\n        const moviesContainer=document.getElementById(\"movies\");\r\n        if(moviesContainer!=null) \r\n        moviesContainer.scrollTo( {top: \"0\", behavior: 'smooth' });\r\n        await getMovies(currGenre,setMovies,nbr);\r\n    };\r\n\r\n    //SetMovies based on user selected genre, this ftc will be used to set movies\r\n    const getMovies=async (value,setMovies,nbrOfPage=1)=>{\r\n        let path=undefined,data=undefined; \r\n        //data.currGenre used to keep on track genre of movies we are getting\r\n        switch(value.toLowerCase()){\r\n            case \"top rated\":\r\n                path=url+\"movie/top_rated?api_key=\"+apiKey+\"&page=\"+nbrOfPage;\r\n                data=await apiCall(path);\r\n                data.currGenre=value;\r\n                setMovies(data);\r\n            break;\r\n\r\n            case \"upcoming\":\r\n                path=url+\"movie/upcoming?api_key=\"+apiKey+\"&page=\"+nbrOfPage;\r\n                data=await apiCall(path);\r\n                data.currGenre=value;\r\n                setMovies(data);\r\n            break;\r\n\r\n            case \"popular\":\r\n                path=url+\"movie/popular?api_key=\"+apiKey+\"&page=\"+nbrOfPage;\r\n                data=await apiCall(path);\r\n                data.currGenre=value;\r\n                setMovies(data);\r\n            break;\r\n\r\n            default: \r\n                path=url+\"search/movie?api_key=\"+apiKey+\"&language=en-US&query=\"+value+\"&include_adult=false&page=\"+nbrOfPage;\r\n                data=await apiCall(path);\r\n                data.currGenre=value;\r\n                setMovies(data);\r\n            break;\r\n        }\r\n    };\r\n\r\n    //API call to get movies of a specific genres\r\n    const selectedGenre=(event)=>{\r\n        const li=event.target;\r\n        const value=li.textContent;\r\n        //Scroll to the top before displaying movies\r\n        const moviesContainer=document.getElementById(\"movies\");\r\n        if(moviesContainer!=null) \r\n        moviesContainer.scrollTo( {top: \"0\", behavior: 'smooth' });\r\n        //Getting movies\r\n        getMovies(value,setMovies);\r\n        //handling the clicked items\r\n        if(clickedItem!=null) clickedItem.style.color=\"grey\";\r\n        if(clickedPage!=null){\r\n            clickedPage.style.backgroundColor=\"transparent\";\r\n            clickedPage.style.color=\"grey\";\r\n        }\r\n        li.style.color=\"snow\";\r\n        clickedItem=li;\r\n        const gender=document.getElementById(\"genre\");\r\n        gender.innerHTML=value;\r\n    };\r\n\r\n    //Search\r\n    const search=()=>{\r\n        const value=document.getElementById(\"searchInput\").value;\r\n        //Scroll to the top before displaying movies\r\n        const moviesContainer=document.getElementById(\"movies\");\r\n        if(moviesContainer!=null) \r\n        moviesContainer.scrollTo( {top: \"0\", behavior: 'smooth' });\r\n        getMovies(value,setMovies,1);\r\n    };\r\n\r\n    //Hooks\r\n    useEffect(() => {\r\n        //getting movies genre & top rated movies\r\n        getGenresTopRated();\r\n        //Clean up\r\n        return ()=>{\r\n            //clean up \r\n            let items=document.getElementsByTagName(\"li\");\r\n            for(let i=0;i<items.length;i++){\r\n                console.log(\"clean up\")\r\n                items[i].removeEventListener(\"click\",nextPage);\r\n                items[i].removeEventListener(\"click\",selectedGenre);\r\n            }\r\n        };\r\n    },[]);\r\n\r\n\r\n    return(\r\n        <main id=\"home\">\r\n            <section className=\"menu__section\">\r\n                <header id=\"about__me\">\r\n                    <img \r\n                    src=\"https://as2.ftcdn.net/jpg/02/83/78/41/500_F_283784192_rwmFx7idBJKJp2ubfsZoYHlf9ODLSQC9.jpg\" \r\n                    alt=\"my profile\"/>\r\n                    <div>\r\n                        <li>Copy right:</li>\r\n                        <li style={{color:\"grey\"}}>zakaria najib</li>\r\n                    </div>\r\n                </header>\r\n                <div id=\"menu\">\r\n                    {genres!==undefined ? genres.genres.map(Element=>{\r\n                        return <li \r\n                            key={Element.id}\r\n                            data-id={Element.id} \r\n                            onClick={event=>selectedGenre(event)}\r\n                            >{Element.name}</li>\r\n                    }) : null}               \r\n                </div>\r\n                <div id=\"backColor\">\r\n                    <AiOutlineYoutube></AiOutlineYoutube>\r\n                </div>\r\n            </section>\r\n            <section className=\"movies__section\">\r\n                <nav id=\"navBar\">\r\n                    <main>\r\n                        <div>\r\n                            <span id=\"genre\">Top rated</span>\r\n                            <img src=\"https://miro.medium.com/max/3840/0*9sGv97nP4gn9B6bt.jpg\" alt=\"pict\"/>\r\n                            <img src=\"https://i.pinimg.com/originals/43/d8/6c/43d86c28e777be11848905460c49fc48.jpg\" alt=\"pict\"/>\r\n                            <img src=\"https://m.media-amazon.com/images/M/MV5BMGM0MTU3MDMtMDUyYy00YTMxLTg1NGMtMTBiMzkxYWEzMmNjXkEyXkFqcGdeQXVyMTAyMjQ3NzQ1._V1_UY268_CR16,0,182,268_AL_.jpg\" alt=\"pict\"/>\r\n                            <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQklVQlTT_g80jpw7fPHtPoBgETKZDDwsHGOw&usqp=CAU\" alt=\"pict\"/>    \r\n                        </div>\r\n                        <button>\r\n                            <input type=\"text\" \r\n                            id=\"searchInput\" \r\n                            placeholder=\" Search\"/> \r\n                            <RiSearch2Fill id=\"searchBtn\" onClick={()=>search()}></RiSearch2Fill>\r\n                        </button>\r\n                    </main>\r\n                    <main>\r\n                        <header id=\"options\">\r\n                            <div>  \r\n                                <li onClick={event=>selectedGenre(event)} ref={defaultGenre}>Top rated</li>\r\n                                <li onClick={event=>selectedGenre(event)}>Upcoming</li>\r\n                                <li onClick={event=>selectedGenre(event)}>Popular</li>\r\n                            </div>\r\n                            <div id=\"options__Genres\">\r\n                                {genres!==undefined ? genres.genres.map(Element=>{\r\n                                return <li \r\n                                    key={Element.id}\r\n                                    data-id={Element.id} \r\n                                    onClick={event=>selectedGenre(event)}\r\n                                    >{Element.name}</li>\r\n                                }) : null}\r\n                            </div>\r\n                            <div className=\"pages pageOne\">\r\n                                {movies!==undefined ? \r\n                                onlyTenPages(movies.total_pages).map((Element,index)=>{\r\n                                    return <li \r\n                                        onClick={(event)=>nextPage(event)}\r\n                                        data-currgenre={movies.currGenre}\r\n                                        data-nbrpages={index+1} \r\n                                        key={index+1}>{index+1}\r\n                                    </li>\r\n                                }): null}\r\n                            </div>\r\n                        </header>\r\n                        <header id=\"scrolling\">\r\n                            <BsChevronLeft \r\n                                className=\"btnLeft\" \r\n                                style={{color:\"snow\"}}\r\n                                onClick={moveLeft}\r\n                            ></BsChevronLeft>\r\n                            <div className=\"pages pageTwo\">\r\n                                {movies!==undefined ? \r\n                                onlyTenPages(movies.total_pages).map((Element,index)=>{\r\n                                    return <li \r\n                                        onClick={(event)=>nextPage(event)}\r\n                                        data-currgenre={movies.currGenre}\r\n                                        data-nbrpages={index+1} \r\n                                        key={index+1}>{index+1}\r\n                                    </li>\r\n                                }): null}\r\n                            </div>\r\n                            <BsChevronRight \r\n                                className=\"btnRight\" \r\n                                style={{color:\"snow\"}}\r\n                                onClick={moveRight}\r\n                            ></BsChevronRight>\r\n                        </header>\r\n                    </main>         \r\n                </nav>\r\n                {/*********Movies Component***** */}\r\n                {movies!==undefined ? \r\n                <Movies movies={movies.results}></Movies> :null}\r\n            </section>\r\n        </main>\r\n    );\r\n};\r\nexport default React.memo(Home);","C:\\Users\\ZAKARIA NAJIB\\Desktop\\moviesNJB project\\moviesnjb\\src\\HomePage\\Components\\Movies.js",[],"C:\\Users\\ZAKARIA NAJIB\\Desktop\\moviesNJB project\\moviesnjb\\src\\HomePage\\Components\\SingleMovie.js",[],"C:\\Users\\ZAKARIA NAJIB\\Desktop\\moviesNJB project\\moviesnjb\\src\\MoviesTrailer\\Components\\MovieInformations.js",["66"],"import React, { useEffect } from \"react\";\r\nimport {useState} from \"react\";\r\nimport \"../Css/MovieInformations.css\";\r\nimport Details from \"../Components/Details\";\r\n//import react icons\r\nimport {HiOutlineMenuAlt2} from \"react-icons/hi\";\r\nimport {RiSearch2Fill} from \"react-icons/ri\";\r\nimport {BsChevronDoubleLeft,BsChevronDoubleRight} from \"react-icons/bs\";\r\nimport {AiOutlineClose} from \"react-icons/ai\";\r\n//import Routing\r\nimport {Link,Switch,Route} from \"react-router-dom\";\r\nimport Reviews from \"./Reviews\";\r\n//import api param\r\nimport {url,apiKey} from \"../../API/ApiParam\";\r\nimport Videos from \"./Videos\";\r\n\r\n\r\nfunction MovieInformation({match}){\r\n    //States\r\n    const [details, setDetails] = useState(undefined);\r\n    const [reviews,setReviews]=useState(undefined);\r\n    const [isMovFound,setIsMovFound]=useState(true);\r\n    const [videos,setVideos]=useState(undefined);\r\n    const [idMoV,setIdMov]=useState(undefined);\r\n\r\n    //Fuctions\r\n    //API Call\r\n    const apiCall=async (path)=>{\r\n        let data=undefined;\r\n        await fetch(path).then(response=>{\r\n            //console.log(\"Response\",response);\r\n            if(response.ok) return response.json();\r\n            else throw Error(\"Api call has failed\");\r\n        }).then(arrivedData=>{\r\n            //console.log(\"Data has arrived\",arrivedData);\r\n            data=arrivedData;\r\n        }).catch(err=>{\r\n            console.log(err);\r\n        });\r\n        return data;\r\n    };\r\n\r\n    //Get Details\r\n    const getDetails=async (id)=>{\r\n        const path=url+\"movie/\"+id+\"?api_key=\"+apiKey+\"&language=en-US\";\r\n        const data=await apiCall(path);\r\n        console.log(\"getData\",data);\r\n        setDetails(data);\r\n        setIdMov(data.id);\r\n    };\r\n\r\n    const getReviews=async (id)=>{\r\n        const path=url+\"movie/\"+id+\"/reviews?api_key=\"+apiKey+\"&language=en-US\";\r\n        const data=await apiCall(path);\r\n        //console.log(\"getReviews\",data);\r\n        setReviews(data);\r\n    };\r\n\r\n    //getVideos\r\n    const getVideos=async (id)=>{\r\n        const path=url+\"movie/\"+id+\"/videos?api_key=\"+apiKey+\"&language=en-US\";\r\n        const data=await apiCall(path);\r\n        //console.log(\"getVideos\",data);\r\n        setVideos(data);\r\n    };\r\n\r\n    //Search\r\n    const search=async ()=>{\r\n        const searchInput=document.getElementById(\"search\");\r\n        const value=searchInput.value;\r\n        //look for the movie\r\n        let path=url+\"search/movie?api_key=\"+apiKey+\"&language=en-US&query=\"+value\r\n        +\"&page=1&include_adult=false\";\r\n        let data=await apiCall(path);\r\n        //get movie details + videos\r\n        if(data.total_pages!==0){\r\n            const id=data.results[0].id;\r\n            //get movie details\r\n            path=url+\"movie/\"+id+\"?api_key=\"+apiKey+\"&language=en-US\";\r\n            data=await apiCall(path);\r\n            setDetails(data);\r\n            setIdMov(data.id);\r\n            //get reviews\r\n            path=url+\"movie/\"+id+\"/reviews?api_key=\"+apiKey+\"&language=en-US\";\r\n            data=await apiCall(path);\r\n            setReviews(data);\r\n            //get movie videos\r\n            path=url+\"movie/\"+id+\"/videos?api_key=\"+apiKey+\"&language=en-US\";\r\n            data=await apiCall(path);\r\n            setVideos(data);\r\n            setIsMovFound(true);\r\n        }else setIsMovFound(false);\r\n    };\r\n\r\n    //right +left two ftcs to control left and right icon\r\n    const right=()=>{\r\n        const rightBtn = document.getElementById(\"details__btn\");\r\n        const leftBtn = document.getElementById(\"reviews__btn\");\r\n        rightBtn.style.display = \"block\";\r\n        leftBtn.style.display = \"none\";\r\n    }\r\n    const left=()=>{\r\n        const rightBtn=document.getElementById(\"details__btn\");\r\n        const leftBtn=document.getElementById(\"reviews__btn\");\r\n        rightBtn.style.display=\"none\";\r\n        leftBtn.style.display=\"block\";\r\n    };\r\n\r\n    //Close trailes section on mobile\r\n    const close=()=>{\r\n        const section=document.getElementById(\"media__sources__mobile\");\r\n        section.style.display=\"none\";\r\n    };\r\n\r\n    useEffect(()=>{\r\n        //Get Details + Reviews + vedios\r\n        getDetails(match.params.movieId);\r\n        getReviews(match.params.movieId);\r\n        getVideos(match.params.movieId);\r\n    },[match.params.movieId]);\r\n\r\n\r\n    return (\r\n        <main id=\"movie__information\">\r\n            <section id=\"infos\">\r\n                <nav>\r\n                    <Link to=\"/\"><HiOutlineMenuAlt2></HiOutlineMenuAlt2></Link>\r\n                    <div>\r\n                        <input type=\"text\" id=\"search\" placeholder=\"Search\"/>\r\n                        <RiSearch2Fill onClick={()=>search()}></RiSearch2Fill>\r\n                    </div>\r\n                </nav>\r\n                {/*******Details contains informations like \r\n                 rating genre,spoken language...******/}\r\n                <Switch>\r\n                    {isMovFound ? \r\n                    <Route exact path={match.url+\"/Reviews\"}  component={()=><Reviews reviews={reviews}></Reviews>}></Route>\r\n                    : <div className=\"err\">Sorry, the movie you are looking for is not available for now </div>}\r\n                    {isMovFound ? \r\n                    <Route path={match.url} component={()=><Details details={details}></Details>}></Route>\r\n                    :<div className=\"err\">Sorry, the movie you are looking for is not available for now </div>}\r\n                </Switch>\r\n                <div id=\"links\">\r\n                    <div>\r\n                        <Link  onClick={()=>right()} to={match.url+\"/Reviews\"}>\r\n                            <BsChevronDoubleRight  id=\"reviews__btn\"></BsChevronDoubleRight>\r\n                        </Link>\r\n                        <Link onClick={()=>left()} to={match.url}>\r\n                            <BsChevronDoubleLeft id=\"details__btn\"></BsChevronDoubleLeft>\r\n                        </Link>\r\n                        \r\n                    </div>\r\n                    <Link to={\"/MoreMovies/\"+idMoV} id=\"similar__recomended\">Similar & recomended movies</Link>\r\n                </div>\r\n            </section>\r\n            <section id=\"media__sources\">\r\n                {videos!==undefined ?\r\n                <Videos videos={videos.results}></Videos>:    \r\n                <div className=\"noMovies\">There is no movie available for now</div>}\r\n            </section>\r\n            <section id=\"media__sources__mobile\">\r\n                <div>\r\n                    <span>Trailers</span>\r\n                    <AiOutlineClose onClick={()=>close()}></AiOutlineClose>\r\n                </div>\r\n                {videos!==undefined ?\r\n                <Videos videos={videos.results}></Videos>:    \r\n                <div className=\"noMovies\">There is no movie available for now</div>}\r\n            </section>\r\n        </main>\r\n    );\r\n};\r\nexport default React.memo(MovieInformation);","C:\\Users\\ZAKARIA NAJIB\\Desktop\\moviesNJB project\\moviesnjb\\src\\MoviesTrailer\\Components\\Details.js",[],"C:\\Users\\ZAKARIA NAJIB\\Desktop\\moviesNJB project\\moviesnjb\\src\\MoviesTrailer\\Components\\Reviews.js",["67"],"import React from \"react\";\r\nimport \"../Css/Reviews.css\";\r\n\r\nfunction Reviews({reviews}){\r\n    //Variables\r\n    const imgUrl=\"https://image.tmdb.org/t/p/w500/\";\r\n\r\n    if(reviews!==undefined){\r\n        return (\r\n            <div id=\"reviews\">\r\n                <h2>Reviews</h2>\r\n                {reviews.results.map((Element,index)=>{\r\n                    if(Element.author_details.avatar_path!=null)\r\n                    return (<main key={Element.id}>\r\n                        <img src={Element.author_details.avatar_path.includes(\"https\") ?\r\n                        Element.author_details.avatar_path.substring(1) : imgUrl+Element.author_details.avatar_path} alt=\"img\"></img>\r\n                        <div>\r\n                            <li>{Element.author_details.username}</li>\r\n                            <p>{Element.content.substring(0,200)+\"...\"}</p>\r\n                            <a style={{color:\"grey\"}} href={Element.url} target=\"_blank\"> Read more...</a>\r\n                        </div>\r\n                    </main>);\r\n                    else return null;\r\n                })}\r\n            </div>\r\n        );\r\n    }else return <div>there is something</div>\r\n};\r\nexport default React.memo(Reviews);","C:\\Users\\ZAKARIA NAJIB\\Desktop\\moviesNJB project\\moviesnjb\\src\\API\\ApiParam.js",[],"C:\\Users\\ZAKARIA NAJIB\\Desktop\\moviesNJB project\\moviesnjb\\src\\MoviesTrailer\\Components\\Videos.js",[],"C:\\Users\\ZAKARIA NAJIB\\Desktop\\moviesNJB project\\moviesnjb\\src\\MoreMovies\\Components\\RSCMovies.js",["68","69","70"],"import React, { useState } from \"react\";\r\nimport {useEffect} from \"react\";\r\nimport \"../Css/RSCMovies.css\";\r\n//API param\r\nimport {url,apiKey} from \"../../API/ApiParam\";\r\n//React icons\r\nimport {AiOutlineArrowLeft} from \"react-icons/ai\";\r\nimport {IoLogoFacebook} from \"react-icons/io\";\r\nimport {RiInstagramFill} from \"react-icons/ri\"\r\n//Routing \r\nimport {Link} from \"react-router-dom\";\r\n//Components\r\nimport RecommendedSimilarActors from \"./RecommendedSimilarActors\";\r\n\r\n\r\nfunction RSCMovies({match}){\r\n\r\n    //States\r\n    const [recommendedMovies,setRecommendedMovies]=useState(undefined);\r\n    const [similarMovies,setSimilarMovies]=useState(undefined);\r\n    const [actors,setActors]=useState(undefined);\r\n\r\n    //Functions\r\n    const apiCall=async (path)=>{\r\n        let data=undefined;\r\n        await fetch(path).then(response=>{\r\n            //console.log(\"Response\",response);\r\n            if(response.ok) return response.json();\r\n            else throw Error(\"API call has failed\");\r\n        }).then(arrivedData=>{\r\n            //console.log(\"arrivedData\",arrivedData);\r\n            data=arrivedData;\r\n        }).catch(err=>{\r\n            console.log(err);\r\n        });\r\n        return data;\r\n    };\r\n\r\n    //getRecommeded movies\r\n    const getRecommeded=async (id)=>{\r\n        const path=url+\"movie/\"+id+\"/recommendations?api_key=\"+apiKey+\"&language=en-US&page=1\";\r\n        const data=await apiCall(path);\r\n        if(data.results[0]!==undefined) setRecommendedMovies(data.results);\r\n    };\r\n    \r\n    //getSimilar movies\r\n    const getSimilar=async (id)=>{\r\n        const path=url+\"movie/\"+id+\"/similar?api_key=\"+apiKey+\"&language=en-US&page=1\";\r\n        const data=await apiCall(path);\r\n        if(data.results[0]!==undefined) setSimilarMovies(data.results);\r\n    };\r\n\r\n    //getActors\r\n    const getActors=async (id)=>{\r\n        const path=url+\"movie/\"+id+\"/credits?api_key=\"+apiKey+\"&language=en-US\";\r\n        const data=await apiCall(path);\r\n        setActors(data.cast);\r\n    };\r\n\r\n    //user Selection (recomended or similar or actors)\r\n    const changeTitle=(event)=>{\r\n        const value=event.target.textContent;\r\n        const title=document.getElementById(\"title\");\r\n        title.textContent=value;\r\n        if(value.toLowerCase()===\"recommended\" || value.toLowerCase()===\"similar\")\r\n            title.textContent=value+\" movies\";\r\n    };\r\n\r\n    //Hooks\r\n    useEffect(()=>{\r\n        //get recommended movies + similar movies +actors\r\n        getRecommeded(match.params.movieId);\r\n        getSimilar(match.params.movieId);\r\n        getActors(match.params.movieId);\r\n    },[]);\r\n\r\n    return (\r\n        <main id=\"more\">\r\n            <nav>\r\n                <Link to={\"/MovieInformation/\"+match.params.movieId}><AiOutlineArrowLeft></AiOutlineArrowLeft></Link>\r\n                <div>  \r\n                    <Link onClick={(event)=>changeTitle(event)} to={match.url+\"/Recommended\"}>Recommended</Link>\r\n                    <Link onClick={(event)=>changeTitle(event)} to={match.url+\"/Similar\"}>Similar</Link>\r\n                    <Link onClick={(event)=>changeTitle(event)} to={match.url+\"/Actors\"}>Actors</Link>\r\n                </div>\r\n            </nav>\r\n            <div id=\"rsc__container\">\r\n                <RecommendedSimilarActors\r\n                    match={match} \r\n                    similarMovies={similarMovies}\r\n                    recommendedMovies={recommendedMovies}\r\n                    actors={actors}\r\n                ></RecommendedSimilarActors>\r\n            </div>\r\n            <footer>\r\n                <span style={{color:\"grey\"}}>Copy right: Zakaria najib</span>\r\n                <div id=\"contact\"> \r\n                    <span>+212708865832</span>\r\n                    <a href=\"https://www.facebook.com/profile.php?id=100007073655281\" target=\"_blank\"><IoLogoFacebook></IoLogoFacebook></a>\r\n                    <a href=\"https://www.instagram.com/zakaria_njb/?hl=fr\" target=\"_blank\"><RiInstagramFill></RiInstagramFill></a>\r\n                </div>\r\n            </footer>\r\n        </main>\r\n    );\r\n};\r\nexport default React.memo(RSCMovies);","C:\\Users\\ZAKARIA NAJIB\\Desktop\\moviesNJB project\\moviesnjb\\src\\MoreMovies\\Components\\RecommendedSimilarActors.js",[],"C:\\Users\\ZAKARIA NAJIB\\Desktop\\moviesNJB project\\moviesnjb\\src\\MoreMovies\\Components\\Actor.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":171,"column":7,"nodeType":"77","endLine":171,"endColumn":9,"suggestions":"78"},{"ruleId":"75","severity":1,"message":"79","line":120,"column":7,"nodeType":"77","endLine":120,"endColumn":29,"suggestions":"80"},{"ruleId":"81","severity":1,"message":"82","line":20,"column":29,"nodeType":"83","endLine":20,"endColumn":90},{"ruleId":"75","severity":1,"message":"84","line":75,"column":7,"nodeType":"77","endLine":75,"endColumn":9,"suggestions":"85"},{"ruleId":"81","severity":1,"message":"82","line":99,"column":21,"nodeType":"83","endLine":99,"endColumn":103},{"ruleId":"81","severity":1,"message":"82","line":100,"column":21,"nodeType":"83","endLine":100,"endColumn":92},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getGenresTopRated', 'nextPage', and 'selectedGenre'. Either include them or remove the dependency array.","ArrayExpression",["88"],"React Hook useEffect has missing dependencies: 'getDetails', 'getReviews', and 'getVideos'. Either include them or remove the dependency array.",["89"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","React Hook useEffect has missing dependencies: 'getActors', 'getRecommeded', 'getSimilar', and 'match.params.movieId'. Either include them or remove the dependency array.",["90"],"no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},{"desc":"93","fix":"94"},{"desc":"95","fix":"96"},"Update the dependencies array to be: [getGenresTopRated, nextPage, selectedGenre]",{"range":"97","text":"98"},"Update the dependencies array to be: [getDetails, getReviews, getVideos, match.params.movieId]",{"range":"99","text":"100"},"Update the dependencies array to be: [getActors, getRecommeded, getSimilar, match.params.movieId]",{"range":"101","text":"102"},[6085,6087],"[getGenresTopRated, nextPage, selectedGenre]",[4242,4264],"[getDetails, getReviews, getVideos, match.params.movieId]",[2591,2593],"[getActors, getRecommeded, getSimilar, match.params.movieId]"]